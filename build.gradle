plugins {
	id 'fabric-loom' version '1.4-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group
base.archivesName = project.archives_base_name

repositories {
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
}

loom {
    splitEnvironmentSourceSets()

	mods {
		"gadgets_of_the_sky" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
			modFiles.from file("src/main/generated")
		}
	}
}

fabricApi {
	configureDataGeneration {
		addToResources = false
		outputDirectory = file("src/main/generated")
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modCompileOnly "dev.emi:emi-fabric:${emi_version}:api"
	modLocalRuntime "dev.emi:emi-fabric:${emi_version}"

	// Add generated data to runtime classpath (slightly hacky)
	runtimeOnly files("src/main/generated")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}

	// Copy datagen to jar
	dependsOn tasks.runDatagen
	from("src/main/generated") {
		exclude "README.md"
		exclude ".cache"
	}
}

publishing {
	publications.register("mavenJava", MavenPublication) {
		from components.java
	}
}